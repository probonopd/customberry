on: [push, pull_request]

jobs:
  armv7_job:
    # The host should always be Linux
    runs-on: ubuntu-18.04
    name: Build on bullseye aarch64
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2.1.1
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: bullseye

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          run: |
            # Set an output parameter `uname` for use in subsequent steps
            uname -a
            echo ::set-output name=uname::$(uname -a)
            apt-get update
            apt-get -y install wget zip mount git
            # Compile something for RPi
            apt-get -y install cmake gcc-arm-linux-gnueabihf
            git clone https://github.com/ptitSeb/box86
            cd box86
            mkdir build; cd build; cmake .. -DRPI4ARM64=1 -DCMAKE_BUILD_TYPE=RelWithDebInfo
            make -j2
            ###
            DLD=$(wget -q "https://downloads.raspberrypi.org/raspios_arm64/images/?C=M;O=D" -O - | grep -o -e "raspios_arm64-.*/" | head -n 1 | cut -d "/" -f 1)
            FILENAME=$(wget -q "https://downloads.raspberrypi.org/raspios_arm64/images/$DLD" -O - | grep -o -e "href.*zip<" | cut -d '"' -f 2)
            wget -q "https://downloads.raspberrypi.org/raspios_arm64/images/$DLD/$FILENAME"
            unzip $(basename "$FILENAME")
            ls
            export LOOP="$(losetup -f -P --show *.img)"
            echo $LOOP
            mount $LOOPp2 /mnt
            mount $LOOPp1 /mnt/boot
            mount

      - name: Get the output
        # Echo the `uname` output parameter from the `runcmd` step
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
